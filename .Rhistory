d_Activity <- d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
d_Activity <- d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
d_Activity <- d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
d_Activity_beta <- d_Activity %>%
mutate(date.time = dmy_hms(date.time),
date = date(date.time),
time = format(date.time, '%T'))
d_Activity_beta <- d_Activity %>%
mutate(ActivityDate = dmy_hms(ActivityDate),
date = date(ActivityDate),
time = format(ActivityDate, '%T'))
View(d_Activity_beta)
d_Activity_beta <- d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
d_Calories <- read.csv("dailyCalories_merged.csv")
d_Intensities <- read.csv("dailyIntensities_merged.csv")
d_Steps <- read.csv("dailySteps_merged.csv")
s_Heartrate <- read.csv("heartrate_seconds_merged.csv")
h_Calories <- read.csv("hourlyCalories_merged.csv")
h_Intensities <- read.csv("hourlyIntensities_merged.csv")
h_Steps <- read.csv("hourlySteps_merged.csv")
m_Calories_narrow <- read.csv("minuteCaloriesNarrow_merged.csv")
m_Calories_wide <- read.csv("minuteCaloriesWide_merged.csv")
m_Intensities_narrow <- read.csv("minuteIntensitiesNarrow_merged.csv")
m_Intensities_wide <- read.csv("minuteIntensitiesWide_merged.csv")
m_MET_narrow <- read.csv("minuteMETsNarrow_merged.csv")
m_Sleep <- read.csv("minuteSleep_merged.csv")
m_Steps_narrow <- read.csv("minuteStepsNarrow_merged.csv")
m_Steps_wide <- read.csv("minuteStepsWide_merged.csv")
d_Sleep <- read.csv("sleepDay_merged.csv")
weightLogInfo <- read.csv("weightLogInfo_merged.csv")
str(d_Activity)
str(d_Calories)
str(d_Intensities)
str(d_Steps)
str(h_Calories)
str(h_Intensities)
str(h_Steps)
str(m_Calories_narrow)
str(m_Calories_wide)
str(m_Intensities_narrow)
str(m_Intensities_wide)
str(m_MET_narrow)
str(m_Steps_wide)
str(d_Sleep)
str(weightLogInfo)
str(s_Heartrate)
d_Activity_beta <- d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
d_Activity_beta <- d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
d_Activity %>%
parse_date_time(ActivityDate, '%m/%d/%Y %I:%M:%S %p')
View(d_Activity)
View(h_Calories)
h_Calories %>%
parse_date_time(ActivityHour, '%m/%d/%Y %I:%M:%S %p')
h_Calories %>%
parse_date_time(h_Calories$ActivityHour, '%m/%d/%Y %I:%M:%S %p')
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
d_Calories <- read.csv("dailyCalories_merged.csv")
d_Intensities <- read.csv("dailyIntensities_merged.csv")
d_Steps <- read.csv("dailySteps_merged.csv")
s_Heartrate <- read.csv("heartrate_seconds_merged.csv")
h_Calories <- read.csv("hourlyCalories_merged.csv")
h_Intensities <- read.csv("hourlyIntensities_merged.csv")
h_Steps <- read.csv("hourlySteps_merged.csv")
m_Calories_narrow <- read.csv("minuteCaloriesNarrow_merged.csv")
m_Calories_wide <- read.csv("minuteCaloriesWide_merged.csv")
m_Intensities_narrow <- read.csv("minuteIntensitiesNarrow_merged.csv")
m_Intensities_wide <- read.csv("minuteIntensitiesWide_merged.csv")
m_MET_narrow <- read.csv("minuteMETsNarrow_merged.csv")
m_Sleep <- read.csv("minuteSleep_merged.csv")
m_Steps_narrow <- read.csv("minuteStepsNarrow_merged.csv")
m_Steps_wide <- read.csv("minuteStepsWide_merged.csv")
d_Sleep <- read.csv("sleepDay_merged.csv")
weightLogInfo <- read.csv("weightLogInfo_merged.csv")
str(d_Activity)
str(d_Calories)
str(d_Intensities)
str(d_Steps)
str(h_Calories)
str(h_Intensities)
str(h_Steps)
str(m_Calories_narrow)
str(m_Calories_wide)
str(m_Intensities_narrow)
str(m_Intensities_wide)
str(m_MET_narrow)
str(m_Steps_wide)
str(d_Sleep)
str(weightLogInfo)
str(s_Heartrate)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
str(d_Activity)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
d_Activity_2 <- d_Activity_2 %>%
select(-c(LoggedActivitiesDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes))
str(d_Activity_2)
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
str(d_Activity)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
d_Activity_2 <- d_Activity_2 %>%
select(-c(TrackerDistance,LoggedActivitiesDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes))
str(d_Activity_2)
summary(d_Activity_2$TotalSteps)
summary(d_Activity_2$TotalDistance)
summary(d_Activity_2$Calories)
summary(d_Activity_2$day_of_week)
mode(d_Activity_2$day_of_week)
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
str(d_Activity)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
d_Activity_2 <- d_Activity_2 %>%
select(-c(ActivityDate,TrackerDistance,LoggedActivitiesDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes))
str(d_Activity_2)
summary(d_Activity_2$TotalSteps)
summary(d_Activity_2$TotalDistance)
summary(d_Activity_2$Calories)
mode(d_Activity_2$day_of_week)
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
str(d_Activity)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
d_Activity_2 <- d_Activity_2 %>%
select(-c(ActivityDate,Year,TrackerDistance,LoggedActivitiesDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes))
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
str(d_Activity)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
d_Activity_2 <- d_Activity_2 %>%
select(-c(ActivityDate,year,TrackerDistance,LoggedActivitiesDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes))
str(d_Activity_2)
summary(d_Activity_2$TotalSteps)
summary(d_Activity_2$TotalDistance)
summary(d_Activity_2$Calories)
mode(d_Activity_2$day_of_week)
View(d_Activity)
setwd("~/Fitabase Data 4.12.16-5.12.16")
library("tidyverse") # Libería especializada en análisis y visualización de datos
library("lubridate") # Paquete de procesamiento de fechas
d_Activity <- read.csv("dailyActivity_merged.csv")
str(d_Activity)
d_Activity <- d_Activity %>%
mutate(ActivityDate = as.Date(ActivityDate, format = "%m/%d/%Y"))
str(d_Activity)
d_Activity_2 <- d_Activity %>%
dplyr::mutate(year = lubridate::year(ActivityDate),
month = lubridate::month(ActivityDate),
day = lubridate::day(ActivityDate),
day_of_week = lubridate::wday(ActivityDate))
str(d_Activity_2)
d_Activity_2 <- d_Activity_2 %>%
select(-c(ActivityDate,year,TrackerDistance,LoggedActivitiesDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes))
str(d_Activity_2)
summary(d_Activity_2$TotalSteps)
summary(d_Activity_2$TotalDistance)
summary(d_Activity_2$Calories)
mode(d_Activity_2$day_of_week)
ggplot(data=d_Activity_2, aes(value, group = Id, color = Id)) +
geom_point() +
geom_line()
ggplot(data=d_Activity_2, aes(day,value, group = Id, color = Id)) +
geom_point() +
geom_line()
ggplot(data=d_Activity_2, aes(day,calories, group = Id, color = Id)) +
geom_point() +
geom_line()
ggplot(data=d_Activity_2, aes(day,Calories, group = Id, color = Id)) +
geom_point() +
geom_line()
ggplot(data=d_Activity_2, aes(day,Calories, group = Id, color = Id)) +
geom_line()
ggplot(data=d_Activity_2, aes(day,Calories, group = Id, color = Id)) +
geom_line() +
facet_wrap(~ id)
ggplot(data=d_Activity_2, aes(day,Calories, group = Id, color = Id)) +
geom_line() +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(day,Calories, group = Id)) +
geom_line() +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(day,Calories)) +
geom_line() +
facet_wrap(~ Id)
ggplot2(data=d_Activity_2, aes(x=day_of_week, y=calories)) +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=calories)) +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=Calories)) +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=Calories)) +
geom_bar() +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=Calories)) +
geom_bar(stat = 'Identity') +
facet_wrap(~ Id)
str(d_Activity_2)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=TotalSteps)) +
geom_bar(stat = 'Identity') +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=TotalSteps)) +
geom_bar(stat = 'Identity') +
facet_wrap(~ Id)
ggplot(data=d_Activity_2, aes(x=day_of_week, y=TotalSteps)) +
geom_bar(stat = 'Identity') +
facet_wrap(~ Id)
ggplot(data=d_Activity_2) +
geom_point((mapping=aes(x=TotalSteps,y=Calories,color=Id)))
ggplot(data=d_Activity_2) +
geom_point((mapping=aes(x=TotalSteps,y=Calories,color=Id))) +
geom_smooth(method = lm, se=FALSE)
ggplot(data=d_Activity_2) +
geom_point((mapping=aes(x=TotalSteps,y=Calories,color=Id))) +
geom_smooth()
ggplot(data=d_Activity_2) +
geom_point((mapping=aes(x=TotalSteps,y=Calories,color=Id)))
ggplot(data=d_Activity_2) +
geom_point((mapping=aes(x=TotalSteps,y=Calories,color=Id))) +
facet_wrap(~ Id)
remotes::install_github("anthonynorth/rscodeio")
install.packages(
"rsthemes",
repos = c(gadenbuie = 'https://gadenbuie.r-universe.dev', getOption("repos"))
)
rsthemes::install_rsthemes(include_base16 = TRUE)
install.packages('tydyverse')
install.packages('tidyverse')
library('tidyverse')
setwd("D:/ANÁLISIS DE DATOS/Dr. Semmelweis")
library(tidyverse)
anual_df <- read.csv("yearly_deaths_by_clinic.csv")
print(yearly)
print(anual_df)
col(anual_df)
str(anual_df)
anual_df <- anual_df %>%
rename(año = year, nacimientos = births, muertes = deaths, clinica = clinic)
str(anual_df)
library(tidyverse)
anual_df <- read.csv("yearly_deaths_by_clinic.csv")
print(anual_df)
anual_df <- anual_df %>%
rename(año = year, nacimientos = births, muertes = deaths, clinica = clinic)
print(anual_df)
anual_df <- anual_df %>%
mutate(proporcion_muertes = muertes/nacimientos)
print(anual_df)
ggplot(anual_df,aes(x=año,y=proporcion_muertes,color=clinica)) +
geom_line()
mensual_df <- read.csv("monthly_deaths.csv")
print(mensual_df)
mensual_df <- read.csv("monthly_deaths.csv")
print(mensual_df)
mensual_df <- mensual_df %>%
rename(
fecha = date,
nacimientos = births,
muertes = deaths,
)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = (muertes/nacimientos))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = (muertes/nacimientos))
round(mortalidad, digits=3)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = (muertes/nacimientos)) %>%
round(mortalidad, digits=3)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = (muertes/nacimientos)) %>%
signif(mortalidad, digits=3)
mensual_df <- mensual_df %>%
round(mortalidad, x=3)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos),x=3)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos),x=3))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos),x=2))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos)))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), x=.1))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos),x=2))
print(mensual_df)
library(tidyverse)
anual_df <- read.csv("yearly_deaths_by_clinic.csv")
print(anual_df)
anual_df <- anual_df %>%
rename(año = year, nacimientos = births, muertes = deaths, clinica = clinic)
print(anual_df)
anual_df <- anual_df %>%
mutate(proporcion_muertes = muertes/nacimientos)
print(anual_df)
ggplot(anual_df,aes(x=año,y=proporcion_muertes,color=clinica)) +
geom_line()
mensual_df <- read.csv("monthly_deaths.csv")
print(mensual_df)
mensual_df <- mensual_df %>%
rename(
fecha = date,
nacimientos = births,
muertes = deaths,
)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos),x=2))
print(mensual_df)
ggplot(mensual_df, aes(x=fecha,y=mortalidad))
mensual_df <- mensual_df %>%
mutate(mortalidad = (muertes/nacimientos))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 2))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3))
print(mensual_df)
ggplot(mensual_df, aes(x=fecha,y=mortalidad)) +
geom_line()
ggplot(mensual_df, aes(x=fecha,y=mortalidad)) +
geom_line()
ggplot(mensual_df, aes(x=fecha,y=mortalidad)) + geom_line()
library(tidyverse)
anual_df <- read.csv("yearly_deaths_by_clinic.csv")
print(anual_df)
anual_df <- anual_df %>%
rename(año = year, nacimientos = births, muertes = deaths, clinica = clinic)
print(anual_df)
anual_df <- anual_df %>%
mutate(proporcion_muertes = muertes/nacimientos)
print(anual_df)
ggplot(anual_df,aes(x=año,y=proporcion_muertes,color=clinica)) +
geom_line()
mensual_df <- read.csv("monthly_deaths.csv")
print(mensual_df)
mensual_df <- mensual_df %>%
rename(
fecha = date,
nacimientos = births,
muertes = deaths,
)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3))
print(mensual_df)
ggplot(mensual_df, aes(x=fecha,y=mortalidad)) + geom_line()
ggplot(mensual_df, aes(x=fecha,y=mortalidad))
ggplot(mensual_df, aes(x=fecha,y=mortalidad)) + geom_line()
print(mensual_df)
library(ggplot2)
ggplot(mensual_df, aes(x=fecha,y=mortalidad,color=muertes)) + geom_line()
ggplot(mensual_df, aes(x=fecha,y=mortalidad)) + geom_line()
str(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos, group = 1), digits = 3)) %>%
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), group = 1), digits = 3)) %>%
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos, group = 1), digits = 3)) %>%
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos group = 1), digits = 3)) %>%
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), group = 1), digits = 3))
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3))
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3)) %>%
as.numeric(mortalidad)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3)) %>%
parse_factor(mortalidad)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3)) %>%
parse_numeric(mortalidad)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3)) %>%
parse_number(mortalidad)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3))
print(mensual_df)
ggplot(mensual_df, aes(x=fecha,y=mortalidad, group=1)) + geom_line()
inicio_lavado = ('1847-06-01') # Fecha de inicio del lavado de manos obligatorio
mensual_df <- mensual_df %>% mutate(lavado_iniciado = fecha >= inicio_lavado) # Agregamos un TRUE/FALSE a la nueva columna de 'lavado_iniciado'
ggplot(mensual_df, aes(x=fecha,y=mortalidad, group=1, color=lavado_iniciado)) + geom_line()
res_mensual <- mensual %>%
group_by(lavado_iniciado) %>%
summarise(mortalidad_media = mean(mortalidad))
res_mensual <- mensual_df %>%
group_by(lavado_iniciado) %>%
summarise(mortalidad_media = mean(mortalidad))
print(res_mensual)
prueba_c <- t.test(mortalidad ~ lavado_iniciado, data = mensual_df)
prueba_c
library(tidyverse)
anual_df <- read.csv("yearly_deaths_by_clinic.csv")
print(anual_df)
anual_df <- anual_df %>%
rename(año = year, nacimientos = births, muertes = deaths, clinica = clinic)
print(anual_df)
anual_df <- anual_df %>%
mutate(proporcion_muertes = muertes/nacimientos)
print(anual_df)
ggplot(anual_df,aes(x=año,y=proporcion_muertes,color=clinica)) +
geom_line()
mensual_df <- read.csv("monthly_deaths.csv")
print(mensual_df)
mensual_df <- mensual_df %>%
rename(
fecha = date,
nacimientos = births,
muertes = deaths,
)
print(mensual_df)
mensual_df <- mensual_df %>%
mutate(mortalidad = round((muertes/nacimientos), digits = 3))
print(mensual_df)
ggplot(mensual_df, aes(x=fecha,y=mortalidad, group=1)) + geom_line()
inicio_lavado = ('1847-06-01') # Fecha de inicio del lavado de manos obligatorio
mensual_df <- mensual_df %>% mutate(lavado_iniciado = fecha >= inicio_lavado) # Agregamos un TRUE/FALSE a la nueva columna de 'lavado_iniciado'
ggplot(mensual_df, aes(x=fecha,y=mortalidad, group=1, color=lavado_iniciado)) + geom_line()
res_mensual <- mensual_df %>%
group_by(lavado_iniciado) %>%
summarise(mortalidad_media = mean(mortalidad))
print(res_mensual)
prueba_c <- t.test(mortalidad ~ lavado_iniciado, data = mensual_df)
prueba_c
